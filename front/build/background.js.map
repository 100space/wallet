{"version":3,"file":"background.js","mappings":"mBAGAA,OAAOC,QAAQC,YAAYC,aAAaC,IACb,YAAnBA,EAAQC,OAERC,QAAQC,IAAI,2FACc,WAAnBH,EAAQC,QACfC,QAAQC,IAAI,sGAEhB,IAGJP,OAAOC,QAAQO,UAAUL,aAAY,CAACM,EAASC,EAAQC,KAOnD,GANqB,mBAAjBF,EAAQG,OAERN,QAAQC,IAAI,iEAA0BE,EAAQI,MAE9CF,EAAa,CAAEG,SAAS,KAEP,mBAAjBL,EAAQG,KAA2B,CACnC,MAAM,OAAEG,EAAM,OAAEC,GAAWP,EAAQI,KACnC,IAAe,wBAAXE,GAA+C,iBAAXA,IAChCE,WAAWC,KAAO,YAAaD,WAAWC,IAAK,CAC/C,MAAMC,EAAUF,WAAWC,IAAIC,QAG/B,OAFKA,GAASR,EAAa,CAAEQ,QAAS,KACtCR,EAAa,CAAEQ,aACR,CACX,CAEJ,GAAsB,wBAAlBJ,EAAOA,QACHE,WAAWC,KAAO,oBAAqBD,WAAWC,IAAK,CACvD,IAAIE,EAAKJ,EAKT,OAJAK,EAAWD,GACXH,WAAWC,IAAII,gBAAgBN,EAAO,IACtCV,QAAQC,IAAIU,WAAWC,KACnBE,GAAIT,EAAa,CAAEY,OAAQ,aACxB,CACX,CAGJ,OADAZ,EAAa,CAAEY,OAAQ,aAChB,CACX,KAEJ,MAAMF,EAAcD,IAChBd,QAAQC,IAAI,aAAca,GAC1BpB,OAAOwB,QAAQC,OAAO,CAAEC,IAAK,eAAgBd,KAAM,QAASe,OAAQ,IAAKC,MAAO,MAAQC,IAChFA,GACA7B,OAAOC,QAAQ6B,YAAY,CACvBlB,KAAM,mBACNC,KAAMO,IAEVd,QAAQC,IAAI,YAEZD,QAAQC,IAAI,QAChB,GACF,C","sources":["../public/background.js"],"sourcesContent":["/* eslint-disable no-undef */\nimport { ethers } from \"ethers\"\n\nchrome.runtime.onInstalled.addListener((details) => {\n    if (details.reason === \"install\") {\n        // 첫 설치시 실행할 코드\n        console.log(\"확장 프로그램이 설치되었습니다.\")\n    } else if (details.reason === \"update\") {\n        console.log(\"확장 프로그램이 새로고칭되었습니다.\")\n        // 버전 업데이트 또는 확장 프로그램에서 새로고침시\n    }\n})\n// 익스텐션 메시지 수신\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n    if (message.type === \"externalScript\") {\n        // external.js로부터 받은 메시지 처리\n        console.log(\"external.js로부터 메시지 수신:\", message.data)\n        // 응답을 보내고자 할 경우 sendResponse 함수 사용\n        sendResponse({ success: true })\n    }\n    if (message.type === \"windowProperty\") {\n        const { method, params } = message.data\n        if (method === \"eth_requestAccounts\" || method === \"eth_accounts\") {\n            if (globalThis.abc && \"address\" in globalThis.abc) {\n                const address = globalThis.abc.address\n                if (!address) sendResponse({ address: [] })\n                sendResponse({ address })\n                return true\n            }\n        }\n        if (method.method === \"eth_sendTransaction\") {\n            if (globalThis.abc && \"sendTransaction\" in globalThis.abc) {\n                let tx = params\n                openWallet(tx)\n                globalThis.abc.sendTransaction(params[0])\n                console.log(globalThis.abc)\n                if (tx) sendResponse({ status: \"success\" })\n                return true\n            }\n        }\n        sendResponse({ status: \"success\" })\n        return true\n    }\n})\nconst openWallet = (tx) => {\n    console.log(\"openWallet\", tx)\n    chrome.windows.create({ url: \"approve.html\", type: \"popup\", height: 600, width: 400 }, (win) => {\n        if (win) {\n            chrome.runtime.sendMessage({\n                type: \"TRANSACTION_DATA\",\n                data: tx,\n            })\n            console.log(\"success\")\n        } else {\n            console.log(\"error\")\n        }\n    })\n}\n"],"names":["chrome","runtime","onInstalled","addListener","details","reason","console","log","onMessage","message","sender","sendResponse","type","data","success","method","params","globalThis","abc","address","tx","openWallet","sendTransaction","status","windows","create","url","height","width","win","sendMessage"],"sourceRoot":""}